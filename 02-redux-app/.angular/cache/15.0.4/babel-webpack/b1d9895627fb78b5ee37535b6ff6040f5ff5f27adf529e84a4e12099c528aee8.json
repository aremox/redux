{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { decrementar, dividir, incrementar, multiplicar, reset } from './contador.action';\n// export function contadorReducer(state: number = 10, action: Action) {\n//     switch (action.type) {\n//         case incrementar.type:\n//             return state + 1;\n//         case decrementar.type:\n//             return state - 1;\n//         default:\n//             return state;\n//     }\n// }\nexport const initialState = 10;\nconst _contadorReducer = createReducer(initialState, on(incrementar, state => state + 1), on(decrementar, state => state - 1), on(multiplicar, (state, {\n  numero\n}) => state * numero), on(dividir, (state, {\n  numero\n}) => state / numero), on(reset, state => state = 0));\nexport function contadorReducer(state, action) {\n  return _contadorReducer(state, action);\n}","map":{"version":3,"mappings":"AAAA,SAAiBA,aAAa,EAAEC,EAAE,QAAe,aAAa;AAC9D,SAASC,WAAW,EAAEC,OAAO,EAAEC,WAAW,EAAEC,WAAW,EAAEC,KAAK,QAAQ,mBAAmB;AAEzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,YAAY,GAAG,EAAE;AAE9B,MAAMC,gBAAgB,GAAGR,aAAa,CACpCO,YAAY,EACZN,EAAE,CAACG,WAAW,EAAGK,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC,EACrCR,EAAE,CAACC,WAAW,EAAGO,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC,EACrCR,EAAE,CAACI,WAAW,EAAE,CAACI,KAAK,EAAE;EAACC;AAAM,CAAC,KAAKD,KAAK,GAAGC,MAAM,CAAC,EACpDT,EAAE,CAACE,OAAO,EAAE,CAACM,KAAK,EAAE;EAACC;AAAM,CAAC,KAAKD,KAAK,GAAGC,MAAM,CAAC,EAChDT,EAAE,CAACK,KAAK,EAAGG,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC,CAChC;AAED,OAAM,SAAUE,eAAe,CAACF,KAAyB,EAAEG,MAAc;EACrE,OAAOJ,gBAAgB,CAACC,KAAK,EAAEG,MAAM,CAAC;AAC1C","names":["createReducer","on","decrementar","dividir","incrementar","multiplicar","reset","initialState","_contadorReducer","state","numero","contadorReducer","action"],"sourceRoot":"","sources":["C:\\Users\\arena\\Documents\\Programacion\\redux\\02-redux-app\\src\\app\\contador\\contador.reducer.ts"],"sourcesContent":["import { Action, createReducer, on, props } from '@ngrx/store';\r\nimport { decrementar, dividir, incrementar, multiplicar, reset } from './contador.action';\r\n\r\n// export function contadorReducer(state: number = 10, action: Action) {\r\n//     switch (action.type) {\r\n//         case incrementar.type:\r\n//             return state + 1;\r\n//         case decrementar.type:\r\n//             return state - 1;\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\nexport const initialState = 10;\r\n\r\nconst _contadorReducer = createReducer(\r\n  initialState,\r\n  on(incrementar, (state) => state + 1),\r\n  on(decrementar, (state) => state - 1),\r\n  on(multiplicar, (state, {numero}) => state * numero),\r\n  on(dividir, (state, {numero}) => state / numero),\r\n  on(reset, (state) => state = 0),\r\n);\r\n\r\nexport function contadorReducer(state: number | undefined, action: Action){\r\n    return _contadorReducer(state, action)\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}